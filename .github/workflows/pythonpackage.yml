# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7]
        tests: ['pytest', 'pytest -m arweave']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Running elasticsearch
      run: |
        docker run \
          -p 9200:9200 \
          -p 9300:9300 \
          -e "discovery.type=single-node" \
          -d \
          docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    - name: Elasticsearch Node is reachable
      run: |
        wget -q --waitretry=1 --retry-connrefused -T 180 -O - http://127.0.0.1:9200
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_dev.txt
    - name: Test with pytest
      run: |
        ${{ matrix.tests }}

  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Running elasticsearch
      run: |
        docker run \
          -p 9200:9200 \
          -p 9300:9300 \
          -e "discovery.type=single-node" \
          -d \
          docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    - name: Elasticsearch Node is reachable
      run: |
        wget -q --waitretry=1 --retry-connrefused -T 180 -O - http://127.0.0.1:9200
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_dev.txt

    - name: Run flask under uwsgi
      run: |
        uwsgi -d --ini uwsgi.ini
        sleep 5
    - name: Test with pytest
      run: |
        pytest -m integration
